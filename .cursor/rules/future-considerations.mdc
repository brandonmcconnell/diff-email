---
description: 
globs: 
alwaysApply: false
---
# Future Considerations

This document captures ideas or enhancements that are **out-of-scope for MVP** but worth tracking for later iterations.

## 1. Outlook Web deep-link via Graph / EWS

Current MVP falls back to subject-search polling in Outlook Web.  A more reliable and faster path is to:

1. Register an Azure AD application with `Mail.Read` scope.
2. From the worker, use the client-credentials grant to call Microsoft Graph and retrieve the `itemId` for the just-sent message.
3. Deep-link to `https://outlook.office.com/mail/0/inbox/id/<itemId>` for an instant open.

This requires three new env-vars (`GRAPH_TENANT_ID`, `GRAPH_CLIENT_ID`, `GRAPH_CLIENT_SECRET`) and token refresh logic in the worker.

## 2. Passkeys / WebAuthn for Automated Login

Automating 2FA via passkeys or WebAuthn would remove the dependence on TOTP secrets and reduce friction when providers deprecate TOTP.  Playwright supports WebAuthn emulation, but the flow differs per provider and is currently brittle in CI.  Re-evaluate once browser & provider support stabilise.

## 3. Password-manager Integration for TOTP

Instead of storing the 32-char TOTP secret in env-vars, consider integrating a secrets manager (1Password Connect, HashiCorp Vault, etc.) that can generate TOTP codes on demand, further reducing secret sprawl.
